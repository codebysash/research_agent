'use client'

import ReactMarkdown from 'react-markdown'
import remarkGfm from 'remark-gfm'
import { ReportData } from '../page'

interface ReportDisplayProps {
  report: ReportData
  query: string
  onNewResearch: () => void
}

export function ReportDisplay({ report, query, onNewResearch }: ReportDisplayProps) {
  const handleSaveReport = () => {
    const timestamp = new Date().toISOString()
      .replace(/[:.]/g, '-')
      .replace('T', '-')
      .split('.')[0]
    
    const filename = `report_${timestamp}.md`
    
    const markdownContent = `# Research Report

**Research Question:** ${query}
**Generated:** ${new Date().toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    })}
**Research Agent:** AI-Powered Research Assistant

---

## Executive Summary

${report.executiveSummary}

---

## Key Findings

${report.keyFindings.map((finding, index) => `${index + 1}. ${finding}`).join('\n')}

---

${report.markdownReport}

---

## Follow-up Questions

${report.followUpQuestions.map((question, index) => `${index + 1}. ${question}`).join('\n')}

---

## Sources

${report.sources.map((source, index) => 
  `${index + 1}. [${source.title}](${source.url})${source.description ? `\n   - ${source.description}` : ''}`
).join('\n\n')}

---

*Report generated by AI Research Agent*
`
    
    const blob = new Blob([markdownContent], { type: 'text/markdown' })
    const url = URL.createObjectURL(blob)
    const a = document.createElement('a')
    a.href = url
    a.download = filename
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    URL.revokeObjectURL(url)
  }

  return (
    <div className="space-y-8">
      {/* Header with actions */}
      <div className="bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-6">
        <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
          <div>
            <h2 className="text-2xl font-bold text-gray-900 dark:text-white mb-2">
              Research Complete
            </h2>
            <p className="text-gray-600 dark:text-gray-300 italic">
              &ldquo;{query}&rdquo;
            </p>
          </div>
          <div className="flex gap-3">
            <button
              onClick={handleSaveReport}
              className="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg transition-colors flex items-center gap-2"
            >
              <span>üíæ</span>
              Save Report
            </button>
            <button
              onClick={onNewResearch}
              className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors flex items-center gap-2"
            >
              <span>üîç</span>
              New Research
            </button>
          </div>
        </div>
      </div>

      {/* Executive Summary */}
      <div className="bg-blue-50 dark:bg-blue-900/20 rounded-2xl shadow-lg p-6">
        <h3 className="text-xl font-bold text-blue-900 dark:text-blue-100 mb-4 flex items-center gap-2">
          <span>üîç</span>
          Executive Summary
        </h3>
        <p className="text-blue-800 dark:text-blue-200 leading-relaxed">
          {report.executiveSummary}
        </p>
      </div>

      {/* Key Findings */}
      <div className="bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-6">
        <h3 className="text-xl font-bold text-gray-900 dark:text-white mb-4 flex items-center gap-2">
          <span>üìã</span>
          Key Findings
        </h3>
        <div className="space-y-3">
          {report.keyFindings.map((finding, index) => (
            <div key={index} className="flex gap-3">
              <span className="flex-shrink-0 w-6 h-6 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-full flex items-center justify-center text-sm font-medium">
                {index + 1}
              </span>
              <p className="text-gray-700 dark:text-gray-300 leading-relaxed">
                {finding}
              </p>
            </div>
          ))}
        </div>
      </div>

      {/* Detailed Report */}
      <div className="bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-6">
        <h3 className="text-xl font-bold text-gray-900 dark:text-white mb-4 flex items-center gap-2">
          <span>üìÑ</span>
          Detailed Report
        </h3>
        <div className="prose prose-gray dark:prose-invert max-w-none">
          <ReactMarkdown remarkPlugins={[remarkGfm]}>
            {report.markdownReport}
          </ReactMarkdown>
        </div>
      </div>

      {/* Follow-up Questions */}
      <div className="bg-purple-50 dark:bg-purple-900/20 rounded-2xl shadow-lg p-6">
        <h3 className="text-xl font-bold text-purple-900 dark:text-purple-100 mb-4 flex items-center gap-2">
          <span>ü§î</span>
          Suggested Follow-up Questions
        </h3>
        <div className="space-y-2">
          {report.followUpQuestions.map((question, index) => (
            <button
              key={index}
              onClick={() => {
                onNewResearch()
                // You could auto-fill the form with this question
              }}
              className="w-full text-left p-3 rounded-lg bg-purple-100 dark:bg-purple-900/30 hover:bg-purple-200 dark:hover:bg-purple-900/50 text-purple-800 dark:text-purple-200 transition-colors"
            >
              <span className="font-medium">{index + 1}.</span> {question}
            </button>
          ))}
        </div>
      </div>

      {/* Sources */}
      <div className="bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-6">
        <h3 className="text-xl font-bold text-gray-900 dark:text-white mb-4 flex items-center gap-2">
          <span>üìö</span>
          Sources Consulted
        </h3>
        <div className="space-y-4">
          {report.sources.map((source, index) => (
            <div key={index} className="border-l-4 border-blue-500 pl-4">
              <div className="flex items-start gap-2">
                <span className="flex-shrink-0 w-6 h-6 bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 rounded-full flex items-center justify-center text-sm font-medium mt-1">
                  {index + 1}
                </span>
                <div>
                  <a
                    href={source.url}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="font-medium text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 transition-colors"
                  >
                    {source.title}
                  </a>
                  <p className="text-sm text-gray-500 dark:text-gray-400 mt-1">
                    üîó {source.url}
                  </p>
                  {source.description && (
                    <p className="text-sm text-gray-600 dark:text-gray-300 mt-1">
                      üìù {source.description}
                    </p>
                  )}
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  )
}